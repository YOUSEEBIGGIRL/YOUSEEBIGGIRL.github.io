<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>issues on /dev/null</title>
    <link>/tags/issues/</link>
    <description>Recent content in issues on /dev/null</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>&amp;copy; 0000 &lt;a&gt;null&lt;/a&gt;
</copyright>
    <lastBuildDate>Thu, 14 Jul 2022 14:30:52 +0000</lastBuildDate><atom:link href="/tags/issues/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>minikube 问题汇总</title>
      <link>/posts/minikube_wen_ti_hui_zong/</link>
      <pubDate>Thu, 14 Jul 2022 14:30:52 +0000</pubDate>
      
      <guid>/posts/minikube_wen_ti_hui_zong/</guid>
      <description>设置代理后，minikube kubectl 无响应 在给虚拟机设置了代理后，整个网络体验爽快多了，再也不用担心拉不下来包了。。。
只需要将虚拟机的网络设置为桥接模式，然后开启 clashx 的 “允许局域网连接”（非常重要的一步，之前就是因为忽略了这一步，导致虚拟机无法使用宿主机代理），然后再点击 clashx 的 “复制终端代理命令”，将里面的 127.</description>
    </item>
    
    <item>
      <title>linux clone() 的坑</title>
      <link>/posts/linux-clone-de-keng/</link>
      <pubDate>Wed, 11 May 2022 17:57:22 +0000</pubDate>
      
      <guid>/posts/linux-clone-de-keng/</guid>
      <description>环境：
MacBook m1
Ubuntu 20.04.4 LTS（使用 cat /etc/issue 查看），基于 multipass 创建</description>
    </item>
    
    <item>
      <title>git push error: remote: fatal error in commit_refs</title>
      <link>/posts/git-push-error-remote-fatal-error-in-commit_refs/</link>
      <pubDate>Wed, 11 Aug 2021 00:28:15 +0000</pubDate>
      
      <guid>/posts/git-push-error-remote-fatal-error-in-commit_refs/</guid>
      <description>在一如既往地执行 git push 到 Github 时，出现了一个从未遇到过的错误：</description>
    </item>
    
    <item>
      <title>两个 main goroutine 操作一个 channel 会怎样</title>
      <link>/posts/liang-ge-main-goroutine-cao-zuo-yi-ge-channel-hui-zen-yang/</link>
      <pubDate>Sun, 08 Aug 2021 21:09:50 +0000</pubDate>
      
      <guid>/posts/liang-ge-main-goroutine-cao-zuo-yi-ge-channel-hui-zen-yang/</guid>
      <description>引子 定义一个全局变量 chan，然后创建两个 main goroutine，一个往全局 chan 里发送数据，一个从全局 chan 里读取数据，会发生什么？</description>
    </item>
    
    <item>
      <title>Parallels Desktop 16 网络初始化失败和不能连接USB设备解决方法</title>
      <link>/posts/parallels-desktop-16-wang-luo-chu-shi-hua-shi-bai-he-bu-neng-lian-jie-usb-she-bei-jie-jue-fang-fa/</link>
      <pubDate>Sat, 01 May 2021 11:52:55 +0000</pubDate>
      
      <guid>/posts/parallels-desktop-16-wang-luo-chu-shi-hua-shi-bai-he-bu-neng-lian-jie-usb-she-bei-jie-jue-fang-fa/</guid>
      <description>Parallels Desktop 16 在最新的macOS Big Sur 11.</description>
    </item>
    
    <item>
      <title>go：记一次 defer 错误</title>
      <link>/posts/goji-yi-ci-defer-cuo-wu/</link>
      <pubDate>Fri, 23 Apr 2021 21:27:02 +0000</pubDate>
      
      <guid>/posts/goji-yi-ci-defer-cuo-wu/</guid>
      <description>错误1： func test() error { if err := func1(); err !</description>
    </item>
    
    <item>
      <title>再探 for 循环</title>
      <link>/posts/wei-shi-me-bu-neng-yong-bian-liang-bao-cun-die-dai-qi/</link>
      <pubDate>Fri, 23 Apr 2021 13:23:51 +0000</pubDate>
      
      <guid>/posts/wei-shi-me-bu-neng-yong-bian-liang-bao-cun-die-dai-qi/</guid>
      <description>有如下 c++ 代码，它的功能是删除容器中所有小于 10 的元素：</description>
    </item>
    
    <item>
      <title>go：http.Request.Body 第二次读取为空 </title>
      <link>/posts/goiocopy-de-keng/</link>
      <pubDate>Sat, 17 Apr 2021 13:01:40 +0000</pubDate>
      
      <guid>/posts/goiocopy-de-keng/</guid>
      <description>有如下代码，先使用 io.Copy 将 request.Body copy 到 stdout 标准输出，再使用 io.</description>
    </item>
    
    <item>
      <title>go：ioutil.ReadAll() 引发的 out of memory </title>
      <link>/posts/goioutilreadall-yin-fa-de-out-of-memory/</link>
      <pubDate>Fri, 16 Apr 2021 22:01:38 +0000</pubDate>
      
      <guid>/posts/goioutilreadall-yin-fa-de-out-of-memory/</guid>
      <description>情景 某天突发奇想，写了一个在线阅读的 http 小程序，当访问某一路由时会读取电子书文件，并写入到 response 中，其中封装了一个读取文件的函数：</description>
    </item>
    
    <item>
      <title>go 字节数组错误：\u0001</title>
      <link>/posts/2021-3-13-byte-array/</link>
      <pubDate>Fri, 16 Apr 2021 19:48:34 +0000</pubDate>
      
      <guid>/posts/2021-3-13-byte-array/</guid>
      <description>在做 压缩字符串 这道题时，提交的输出结果十分诡异，如下：
输入：
[&amp;ldquo;a&amp;rdquo;,&amp;ldquo;a&amp;rdquo;,&amp;ldquo;b&amp;rdquo;,&amp;ldquo;b&amp;rdquo;,&amp;ldquo;c&amp;rdquo;,&amp;ldquo;c&amp;rdquo;,&amp;ldquo;c&amp;rdquo;]</description>
    </item>
    
    <item>
      <title>etcd 错误：context deadline exceeded</title>
      <link>/posts/2020-10-17-etcd-error/</link>
      <pubDate>Fri, 16 Apr 2021 19:46:44 +0000</pubDate>
      
      <guid>/posts/2020-10-17-etcd-error/</guid>
      <description>etcd 远程操作失败：Error: context deadline exceeded 在服务器启动 etcd，并在本地机器通过 etcdctl &amp;ndash;endpoints=http://ip:2379 put name &amp;ldquo;123&amp;rdquo; 命令，在服务器的 etcd 中创建一对键值对， 如下图所示：</description>
    </item>
    
  </channel>
</rss>
